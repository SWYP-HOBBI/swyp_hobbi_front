import { useToastStore } from '@/store/toast';

/**
 * 클립보드 복사 유틸리티 함수
 *
 * 지정된 텍스트를 클립보드에 복사하고 사용자에게 피드백을 제공합니다.
 *
 * 주요 기능:
 * 1. 텍스트를 클립보드에 복사
 * 2. 성공/실패에 따른 토스트 알림
 * 3. 에러 처리 및 로깅
 *
 * 기술적 특징:
 * - Navigator Clipboard API 사용
 * - 비동기 처리 (async/await)
 * - Zustand 스토어를 통한 토스트 알림
 * - 에러 핸들링 및 사용자 피드백
 *
 * 사용자 경험:
 * - 복사 성공 시 즉각적인 피드백
 * - 복사 실패 시 명확한 에러 메시지
 * - 일관된 토스트 알림 시스템
 *
 * 브라우저 호환성:
 * - 모던 브라우저에서 Clipboard API 지원
 * - HTTPS 환경에서만 동작 (보안 정책)
 * - 구형 브라우저에서는 fallback 필요 가능
 *
 * 보안 고려사항:
 * - HTTPS 환경에서만 클립보드 접근 가능
 * - 사용자 권한이 필요한 경우 권한 요청
 * - 민감한 정보 복사 시 주의 필요
 *
 * @param text - 클립보드에 복사할 텍스트
 * @returns Promise<void> - 복사 작업 완료를 나타내는 Promise
 *
 * 사용 예시:
 * ```typescript
 * // 링크 복사
 * await copy('https://example.com');
 *
 * // 텍스트 복사
 * await copy('복사할 텍스트');
 *
 * // 버튼 클릭 핸들러에서 사용
 * const handleCopy = () => copy('복사할 내용');
 * ```
 */
export const copy = async (text: string) => {
  // ===== Zustand 스토어에서 토스트 함수 가져오기 =====

  /**
   * 토스트 스토어에서 showToast 함수를 가져옵니다.
   *
   * getState()를 사용하여 스토어의 현재 상태에 직접 접근합니다.
   * 이는 컴포넌트 외부에서 스토어 액션을 호출할 때 사용하는 방법입니다.
   *
   * 장점:
   * - 컴포넌트 렌더링 없이 스토어 액션 호출 가능
   * - 유틸리티 함수에서 전역 상태 접근 가능
   * - 성능 최적화 (불필요한 리렌더링 방지)
   */
  const { showToast } = useToastStore.getState();

  try {
    // ===== 클립보드에 텍스트 복사 =====

    /**
     * Navigator Clipboard API를 사용하여 텍스트를 클립보드에 복사합니다.
     *
     * writeText() 메서드:
     * - 비동기 함수로 Promise를 반환
     * - 지정된 텍스트를 클립보드에 복사
     * - 성공 시 Promise가 resolve됨
     * - 실패 시 Promise가 reject됨
     *
     * 브라우저 요구사항:
     * - HTTPS 환경에서만 동작
     * - 사용자 권한이 필요한 경우 권한 요청
     * - 모던 브라우저에서 지원
     *
     * @param text - 복사할 텍스트
     */
    await navigator.clipboard.writeText(text);

    // ===== 성공 시 토스트 알림 =====

    /**
     * 클립보드 복사가 성공했을 때 사용자에게 성공 메시지를 표시합니다.
     *
     * 메시지 내용:
     * - "링크를 클립보드에 복사했습니다."
     * - 사용자가 복사 작업이 완료되었음을 알 수 있음
     * - 토스트 알림으로 일시적인 피드백 제공
     *
     * 사용자 경험:
     * - 즉각적인 성공 피드백
     * - 복사 작업 완료 확인
     * - 일관된 알림 시스템
     */
    showToast('링크를 클립보드에 복사했습니다.');
  } catch (error) {
    // ===== 에러 처리 =====

    /**
     * 클립보드 복사 중 에러가 발생했을 때의 처리 로직입니다.
     *
     * 발생 가능한 에러:
     * - NotAllowedError: 권한이 거부된 경우
     * - NotSupportedError: 브라우저가 Clipboard API를 지원하지 않는 경우
     * - NetworkError: 네트워크 관련 에러
     * - 기타 예상치 못한 에러
     *
     * 에러 처리 과정:
     * 1. 콘솔에 에러 로그 출력 (개발자 디버깅용)
     * 2. 사용자에게 실패 메시지 표시
     * 3. 애플리케이션 크래시 방지
     */
    console.error('Failed to copy text:', error);

    /**
     * 클립보드 복사가 실패했을 때 사용자에게 실패 메시지를 표시합니다.
     *
     * 메시지 내용:
     * - "링크 복사에 실패했습니다."
     * - 사용자가 복사 작업이 실패했음을 알 수 있음
     * - 명확한 실패 안내
     *
     * 사용자 경험:
     * - 명확한 실패 피드백
     * - 문제 상황 인지
     * - 재시도 가능성 제시
     */
    showToast('링크 복사에 실패했습니다.');
  }
};
